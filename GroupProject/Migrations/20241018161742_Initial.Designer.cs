// <auto-generated />
using GroupProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GroupProject.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20241018161742_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupProject.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactID = 1,
                            Email = "huda.judeh@southeasttech.edu",
                            FirstName = "Huda",
                            LastName = "Judeh",
                            Organization = "Southeast Technial College",
                            Phone = "605-555-1234"
                        },
                        new
                        {
                            ContactID = 2,
                            Email = "ducotemike@yahoo.com",
                            FirstName = "Michael",
                            LastName = "Ducote",
                            Phone = "225-987-5555"
                        },
                        new
                        {
                            ContactID = 3,
                            Email = "tom.winker@winfieldcorp.com",
                            FirstName = "Thomas",
                            LastName = "Winker",
                            Organization = "Winfield Corporation",
                            Phone = "605-555-6789"
                        },
                        new
                        {
                            ContactID = 4,
                            Email = "drmattb@siouxfallschiro.com",
                            FirstName = "Matt",
                            LastName = "Brandner",
                            Organization = "Sioux Falls Chiropractic",
                            Phone = "605-555-9876"
                        },
                        new
                        {
                            ContactID = 5,
                            Email = "arends.em@gmail.com",
                            FirstName = "Emma",
                            LastName = "Arends",
                            Phone = "320-456-7890"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
